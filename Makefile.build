
.PHONY: derpass COPY_CFILES

ifneq ($(BUILD),$(CURDIR))

include $(BASE_DIR)/Makefile.include
include $(BASE_DIR)/core/Makefile.build
include $(BASE_DIR)/$(PLATFORM)/Makefile.build

ifneq ($(GAME_DIR),$(BASE_DIR))
include $(GAME_DIR)/Makefile.build
endif

$(BUILD):
	$(SILENT)mkdir -p $(BUILD)
	$(SILENT)make -f $(BASE_DIR)/Makefile.build -C $(BUILD) 

else

# I made this going off of /opt/devkitpro/devkitARM/base_rules
$(GAME): $(OFILES) $(SPRITE_FILES)
	$(SILENT)$(LD) $(LDFLAGS) $(FLAGS_LINKER) $(OFILES) $(LIBPATHS) $(LIBS) -o $@
	@$(ADD_COMPILE_COMMAND) end

include $(BASE_DIR)/Makefile.include
include $(BASE_DIR)/core/Makefile.build
include $(BASE_DIR)/$(PLATFORM)/Makefile.build

ifneq ($(GAME_DIR),$(BASE_DIR))
include $(GAME_DIR)/Makefile.build
endif

# $(SPRITE_DIRS): 
# 	@mkdir -p $@
# 	@cd $@ && grit $(shell find $(BASE_DIR)/core/$@ -iname *.png | sort) \
# 		-ff $(BASE_DIR)/nds/$@/$(shell basename $@).grit
# $(SHARED_SPRITE_FILES):
#	@sed -i "s/@.*$$/\n/g" $(basename $@).s     # TODO: these sed calls are a HACK.
#	@sed -i "s/\.hidden.*$$/\n/g" $(basename $@).s
#	@sed -i "s/\.word/.long/g" $(basename $@).s
#	@cd $(shell dirname $@) && $(CC) $(CFLAGS) -c $(shell basename $(basename $@)).s -o $(shell basename $(basename $@)).o

#---------------------------------------------------------------------------------
# $(SPRITE_FILES:.png=.o) : $(SPRITE_DIRS) $(foreach file,$(SPRITE_FILES),$(BASE_DIR)/core/$(file)) 
# 	@sed -i "s/@.*$$/\n/g" $(basename $@).s
# 	@sed -i "s/\.hidden.*$$/\n/g" $(basename $@).s
# 	@sed -i "s/\.word/.long/g" $(basename $@).s
# 	@$(CC) $(CFLAGS) -c $(basename $@).s -o $(basename $@).o
# 	@$(ADD_COMPILE_COMMAND) add $(CC) "$(CFLAGS) -x assembler-with-cpp $(ASFLAGS) \
# 		-c $(basename $@).s -o $@" $(basename $@).s
#---------------------------------------------------------------------------------

endif
