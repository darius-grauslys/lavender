        
        1) Remove Tile_Render_Result, and use f_Tile_Render_Kernel.
        2) Add enum utils:
            ENUM_MAP(name, type__enum, type__result)    <- good for "Archetypes"
            HASH_MAP(name, type__result)                <- ECS, uses Serialization_Header uuid.

            DECLARE__ENUM_MAP_API(name, type__enum, type__result)
            DEFINE__ENUM_MAP_API(name, type__enum, type__result)
            DECLARE__HASH_MAP_API(name, type_result)
            DEFINE__HASH_MAP_API(name, type_result)
        3) Add getter util:
            DECLARE__GETTER(...)
            DECLARE__GETTER_P(...)

        Making a new Sprite Allocation Archetype:
        ENUM_MAP(Particle_To__Sprite, Particle_Kind, f_Sprite_Gfx_Allocator);

        typedef struct Sprite_Gfx_Allocation_Manager_t {
            Enum_Map__Particle_To__Sprite enum_map__particle_to_sprite;
            ...
        } Sprite_Gfx_Allocation_Manager;

        DECLARE__SPRITE_GFX_ALLOCATION_MANAGER__API(
                particle,
                enum_map__particle_to__sprite);
        DEFINE__SPRITE_GFX_ALLOCATION_MANAGER__API(
                particle,
                enum_map__particle_to__sprite);

        void register_sprite_gfx_allocators(...) {
            ...
            register_sprite_gfx_allocator_for__particle(...)
            ...
        }

        allocate_sprite_for__particle(...);

        DECLARE__TILE_LOGIC_RECORD_MANAGER__API(
                tile_cover_kind,
                enum_map__tile_cover_to__tile_logic_record);
        DEFINE__...

        get_p_tile_logic_record_for__tile_cover(...);

        is_tile__sight_blocking(...) {
            ...
            TILE_LOGIC_RECORD_MANAGER__CHECK_SIGHT_BLOCKING(
                Tile_Kind, tile_kind);
            TILE_LOGIC_RECORD_MANAGER__CHECK_SIGHT_BLOCKING(
                Tile_Cover_Kind, tile_cover_kind);
            ...
        }
